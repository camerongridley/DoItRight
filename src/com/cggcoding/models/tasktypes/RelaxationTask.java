package com.cggcoding.models.tasktypes;

import com.cggcoding.models.Task;
import com.cggcoding.models.Updateable;

import java.util.Random;

public class RelaxationTask extends Task implements Updateable{
	
	private int durationInMinutes;


	public RelaxationTask(int taskID, int userID) {
		super(taskID, userID);
	}

	public RelaxationTask(int taskID, int userID, String title, String instructions, int duration) {
		super(taskID, userID, title, instructions);
		durationInMinutes = duration;
	}

	public RelaxationTask(int taskID, int userID, int taskSetID, String title, String instructions, int duration) {
		super(taskID, userID, taskSetID, title, instructions);
		durationInMinutes = duration;
	}

	//static factory method
	public static RelaxationTask newInstance(int taskSetID, String title, String instructions, int durationInMinutes){
		//this.taskID = TODO replace Random with call to database to create the task and get the autogenerated taskID
		int taskID = Math.abs(new Random(10000).nextInt());

		return new RelaxationTask(taskID, taskSetID, title, instructions, durationInMinutes);
	}

	public int getDurationInMinutes(){
		return this.durationInMinutes;
	}

	@Override
	public boolean updateData(Task taskWithNewData) {
		//update universal properties
		this.setCompleted(taskWithNewData.isCompleted());
		this.setDateCompleted(taskWithNewData.getDateCompleted());

		//updateCogTask DB call goes here

		return true;//TODO returns true if DB update was success
	}
}
